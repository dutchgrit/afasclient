<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="NetStandard" #>
<#@ import namespace="System.Threading.Tasks" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ assembly name="$(TargetDir)DutchGrit.AfasClient.dll" #>
<#@ assembly name="Newtonsoft.Json.dll" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ import namespace="DutchGrit.Afas" #>
<#@ import namespace="DutchGrit.Afas.CodeGen" #>
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;

<#@ include file="config.ttinclude" #>
 
<#
 
            try
            { 
                
                var conn = new AfasClient(memberid, token);
                var version = conn.GetVersion();
                var generator = new GetGenerator(conn);
                var items = generator.GenerateList();
           
#>
// Autogenerated on : <#= DateTime.Now #> using Afas version <#= version #>

namespace DutchGrit.Afas.Entities
{

<#  foreach (var meta in items) { #>

    [ConnectorName("<#= meta.Name #>")] 
    public class <#= Utils.StripUnderscore(meta.Name) #> : IGetEntity 
    {
  
<#  foreach (var item in meta.Fields) { #>

        /// <summary>
        /// <#= item.Label #>
        /// </summary>

        [JsonProperty("<#= item.Id #>")]
        public virtual <#= Helpers.DataTypeToType(item.DataType, item.ControlType)#> <#= Utils.FixFields(item.Id) #> { get; set; }

<#  }; #>
    }
<#
           }
             }
            catch (Exception ex)
            {
                WriteLine($"//{ex.ToString()}");
                return "";
            }
#>
}